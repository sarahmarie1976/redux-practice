{"ast":null,"code":"import { FETCH_DATA, FETCH_SUCCESS, FETCH_FAILURE } from '../actions/actions';\nconst initialState = {\n  players: [],\n  isFetching: false,\n  error: ''\n};\n\nconst playersReducer = (state = initialState, actions) => {\n  switch (actions.type) {\n    case FETCH_DATA:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        payload: actions.payload\n      };\n\n    case FETCH_FAILURE:\n      return { ...state,\n        isFetching: false,\n        payload: actions.payload\n      };\n  }\n\n  return state;\n};\n\nexport default playersReducer;","map":{"version":3,"sources":["C:/Users/sholl/OneDrive/Desktop/LambdaSchool/redux-practice/project/src/reducers/reducers.js"],"names":["FETCH_DATA","FETCH_SUCCESS","FETCH_FAILURE","initialState","players","isFetching","error","playersReducer","state","actions","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,QAAyD,oBAAzD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,OAAvB,KAAmC;AACtD,UAAOA,OAAO,CAACC,IAAf;AACI,SAAKV,UAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKJ,aAAL;AACI,aAAO,EACJ,GAAGO,KADC;AAEJH,QAAAA,UAAU,EAAE,KAFR;AAGJM,QAAAA,OAAO,EAAEF,OAAO,CAACE;AAHb,OAAP;;AAKJ,SAAKT,aAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,UAAU,EAAE,KAFT;AAGHM,QAAAA,OAAO,EAAEF,OAAO,CAACE;AAHd,OAAP;AAbR;;AAmBA,SAAOH,KAAP;AACH,CArBD;;AAuBA,eAAeD,cAAf","sourcesContent":["import { FETCH_DATA, FETCH_SUCCESS, FETCH_FAILURE } from '../actions/actions';\r\n\r\nconst initialState = {\r\n    players: [],\r\n    isFetching: false, \r\n    error: '',\r\n}\r\n\r\nconst playersReducer = (state = initialState, actions) => {\r\n    switch(actions.type) {\r\n        case FETCH_DATA:\r\n            return {\r\n                ...state, \r\n                isFetching: true, \r\n            }\r\n        case FETCH_SUCCESS:\r\n            return {\r\n               ...state, \r\n               isFetching: false, \r\n               payload: actions.payload     \r\n            } \r\n        case FETCH_FAILURE: \r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                payload: actions.payload,\r\n            }       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default playersReducer;"]},"metadata":{},"sourceType":"module"}