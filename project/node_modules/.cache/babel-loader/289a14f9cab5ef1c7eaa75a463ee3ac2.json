{"ast":null,"code":"import axios from 'axios';\nexport const FETCH_DATA = 'FETCH_DATA';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\nexport const fetchPlayers = () => dispatch => {\n  dispatch({\n    type: FETCH_DATA\n  });\n  axios.get('http://localhost:3333/players').then(res => {\n    console.log('Fetch success', res.data);\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log('error', err);\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/sholl/OneDrive/Desktop/LambdaSchool/redux-practice/project/src/actions/actions.js"],"names":["axios","FETCH_DATA","FETCH_SUCCESS","FETCH_FAILURE","fetchPlayers","dispatch","type","get","then","res","console","log","data","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,UAAU,GAAI,YAApB;AACP,OAAO,MAAMC,aAAa,GAAI,eAAvB;AACP,OAAO,MAAMC,aAAa,GAAI,eAAvB;AAGP,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAD,EAAAA,KAAK,CACAO,GADL,CACS,+BADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAAG,CAACG,IAAjC;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAR;AAAuBW,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAApC,KAAD,CAAR;AACH,GALL,EAMKE,KANL,CAMWC,GAAG,IAAI;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,GAArB;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,aAAR;AAAuBU,MAAAA,OAAO,EAAEE;AAAhC,KAAD,CAAR;AACH,GATL;AAUH,CAZM","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport const FETCH_DATA  = 'FETCH_DATA';\r\nexport const FETCH_SUCCESS  = 'FETCH_SUCCESS';\r\nexport const FETCH_FAILURE  = 'FETCH_FAILURE';\r\n\r\n\r\nexport const fetchPlayers = () => (dispatch) => {\r\n    dispatch({ type: FETCH_DATA })\r\n    axios\r\n        .get('http://localhost:3333/players')\r\n        .then(res => {\r\n            console.log('Fetch success', res.data);\r\n            dispatch({ type: FETCH_SUCCESS, payload: res.data })\r\n        })\r\n        .catch(err => {\r\n            console.log('error', err);\r\n            dispatch({ type: FETCH_FAILURE, payload: err })\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}